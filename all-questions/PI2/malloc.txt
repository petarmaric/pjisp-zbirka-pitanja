Programski jezik C za dinamicko upravljanje memorijom koristi?
+Funkcije standardne biblioteke.
-Naredbe programskog jezika.
-C ne podrzava dinamicko upravljanje memorijom.
.

Potrebno je alocirati memorijski blok za sledecu strukturu:
	typedef struct cvor_st
	{
		int inf;
		struct cvor_st *sledeci;
	} SCVOR;
i dodeliti vrednost promenljivi:
	SCVOR *novi;
-novi=malloc(sizeof(SCVOR*));
-novi=malloc(sizeof(int));
-novi=(SCVOR)malloc(sizeof(SCVOR));
+novi=(SCVOR *)malloc(sizeof(SCVOR));
-novi=(SCVOR *)malloc(sizeof(int));
-free(novi);
.

Potrebno je osloboditi memorijski blok koji je zauzimala sledeca struktura:
	typedef struct cvor_st
	{
		int inf;
		struct cvor_st *sledeci;
	} SCVOR;
	SCVOR *novi;
-novi=malloc(sizeof(SCVOR));
-novi=malloc(sizeof(int));
-novi=(SCVOR)malloc(sizeof(SCVOR));
-novi=(SCVOR *)malloc(sizeof(SCVOR));
-novi=(SCVOR *)malloc(sizeof(int));
+free(novi);
.

Koliko bajtova radne memorije ce zauzeti naredni malloc poziv?
	struct st {
		int a;
		char b[30];
		char c;
	};
	struct st t = (struct st *)malloc(sizeof(struct st));
-4
-30
-31
-34
+35
-36
.

Prilikom definisanja skalarnih promenljivih ili nizova, memorija se zauzima:
+staticki
-dinamicki
-upotrebom funkcije malloc()
-upotrebom funkcije free()
.

Curenje memorije je efekat koji nastaje usled:
+rezervisanja memorije bez oslobadjanja
-poziva funkcije free()
.

Prilikom definisanja spregnutih struktura, memorija se zauzima:
-staticki
+dinamicki
-sekvencijalno
.

Ako je realociranje uspesno, funkcija realloc vraca:
+genericki pokazivac
-int * pokazivac
-float * pokazivac
.

U C jeziku, viseci (dangling) pokazivaci:
-su pokazivaci na kraju cirkularne liste
-su pokazivaci na kraju kruzne liste
-su pokazivaci kojima se zavrsava dek
-su pokazivaci kojima se resava problem lazne popunjenosti liste
-su pokazivaci kojima se resava problem lazne popunjenosti RED-a
+su pokazivaci na deo memorije koji vise nije rezervisan
.
