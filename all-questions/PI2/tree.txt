Kod kompletnog stabla (reda n):
-svi putevi od korena do listova su iste duzine
+svi elementi osim listova imaju izlazni stepen n
-broj elemenata na istom nivou razlikuje najvise za 1
.

Obilazak binarnog stabla redosledom
	pristupi levom podstablu
	pristupi desnom podstablu
	pristupi nadredjenom
je:
+Obilazak sa dna ka vrhu
-Obilazak s leva u desno
-Obilazak s vrha ka dnu
.

Obilazak binarnog stabla redosledom
	pristupi nadredjenom
	pristupi levom podstablu
	pristupi desnom podstablu
je:
-Obilazak sa dna ka vrhu
-Obilazak s leva u desno
+Obilazak s vrha ka dnu
.

Orjentisani skup cvorova (uopstenog stabla) koji su povezani granama se nazivaju:
+put
-lanac
-graf
-digraf
.

Koju operaciju nad stablom (uredjenim tako da vrednost elemenata ne opada sa leva na desno) implementira sledeca funkcija:
	int foobar(BCVOR* node) {
		while (node->left != NULL) {
			node = node->left;
		}

		return node->data;
	}
-racunanje broja elemenata na zadatom nivou stabla
-proverava da li postoji putanja od korena do lista sa zadatom sumom elemenata
-zamenu levog i desnog podstabla svakog elemenata u stablu
-racunanje broja elemenata u stablu
+pronalazenje najmanje vrednosti u stablu
-racunanje sume elemenata stabla
-odredjivanje maksimalne dubine stabla
-balansiranje stabla
.

Koju operaciju nad stablom (uredjenim tako da vrednost elemenata ne opada sa leva na desno) implementira sledeca funkcija:
	int foobar(BCVOR* node) {
		while (node->right != NULL) {
			node = node->right;
		}

		return node->data;
	}
-racunanje broja elemenata na zadatom nivou stabla
-proverava da li postoji putanja od korena do lista sa zadatom sumom elemenata
-zamenu levog i desnog podstabla svakog elemenata u stablu
-racunanje broja elemenata u stablu
+pronalazenje najvece vrednosti u stablu
-racunanje sume elemenata stabla
-odredjivanje maksimalne dubine stabla
-balansiranje stabla
.

Koju operaciju nad stablom (uredjenim tako da vrednost elemenata ne opada sa leva na desno) implementira sledeca funkcija:
	int foobar(BCVOR* node) {
		if (node==NULL) {
			return 0;
		}

		int l = foobar(node->left);
		int r = foobar(node->right);
		return 1 + ((l > r) ? l : r);
	}
-racunanje broja elemenata na zadatom nivou stabla
-proverava da li postoji putanja od korena do lista sa zadatom sumom elemenata
-zamenu levog i desnog podstabla svakog elemenata u stablu
-racunanje broja elemenata u stablu
-pronalazenje najmanje vrednosti u stablu
-racunanje sumu elemenata stabla
+odredjivanje maksimalne dubine stabla
-balansiranje stabla
.

Koju operaciju nad stablom (uredjenim tako da vrednost elemenata ne opada sa leva na desno) implementira sledeca funkcija:
	int foobar(BCVOR* node) {
		if (node==NULL) {
			return 0;
		}

		return 1 + foobar(node->left) + foobar(node->right);
	}
-racunanje broja elemenata na zadatom nivou stabla
-proverava da li postoji putanja od korena do lista sa zadatom sumom elemenata
-zamenu levog i desnog podstabla svakog elemenata u stablu
+racunanje broja elemenata u stablu
-pronalazenje najmanje vrednosti u stablu
-racunanje sume elemenata stabla
-odredjivanje maksimalne dubinu stabla
-balansiranje stabla
.

Koju operaciju nad stablom (uredjenim tako da vrednost elemenata ne opada sa leva na desno) implementira sledeca funkcija:
	int foobar(BCVOR* node) {
		if (node==NULL) {
			return 0;
		}

		return node->data + foobar(node->left) + foobar(node->right);
	}
-racunanje broja elemenata na zadatom nivou stabla
-proverava da li postoji putanja od korena do lista sa zadatom sumom elemenata
-zamenu levog i desnog podstabla svakog elemenata u stablu
-racunanje broja elemenata u stablu
-pronalazenje najmanje vrednosti u stablu
+racunanje sume elemenata stabla
-odredjivanje maksimalne dubine stabla
-balansirnje stabla
.

Koju operaciju nad stablom (uredjenim tako da vrednost elemenata ne opada sa leva na desno) implementira sledeca funkcija:
	int foobar(BCVOR* node, int t){
		if(node==NULL)
			return 0;

		if(t==0)
			return 1;

		return foobar(node->left, t-1) + foobar(node->right, t-1);
	}
+racunanje broja elemenata na zadatom nivou stabla
-proverava da li postoji putanja od korena do lista sa zadatom sumom elemenata
-zamenu levog i desnog podstabla svakog elemenata u stablu
-racunanje broja elemenata u stablu
-pronalazenje najmanje vrednosti u stablu
-racunanje sume elemenata stabla
-odredjivanje maksimalne dubine stabla
-balansiranje stabla
.
