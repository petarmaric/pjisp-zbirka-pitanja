U jeziku C unija zauzima u memoriji onoliko bajta koliko:
+ je dovoljno za smestanje svog najveceg elementa
- zauzimaju svi elementi koji je sacinjavaju
- je velicina najveceg podrzanog tipa podatka u C jeziku
- i struktura koja se sastoji od istih elemenata
.

Koliko polja ima struktura:
	struct osoba {
	   char ime_i_prezime[50];
	   char adresa[20];
	   int godine;
	} ;
-4 polja
-1 polje
-71 polje
-Ovo nije pravilno deklarisana struktura!
+3 polja
.

Koliko polja ima struktura:
	struct osoba {
	   char ime_i_prezime[50];
	   char adresa[20];
	   int godine;
	   int jmbg;
	} ;
+4 polja
-1 polje
-72 polje
-Ovo nije pravilno deklarisana struktura!
-3 polja
.

Koliko polja ima struktura:
	struct {
	   char ime_i_prezime[50];
	   char adresa[20];
	   int godine;
	   int jmbg;
	}
-4 polja
-1 polje
-72 polje
+Ovo nije pravilno deklarisana struktura!
-3 polja
.

Koliko polja ima struktura:
	struct osoba {
	   char ime_i_prezime[50];
	   char adresa[20];
	} ;
-4 polja
-1 polje
-70 polja
-Ovo nije pravilno deklarisana struktura!
-3 polja
+2 polja
.

Koja ce biti vrednost promenljive t.y nakon izvrsavanja koda:
	struct tacka {
	   int x;
	   int y;
	} ;

	int main()
	{
		tacka t;
		t.x = 3;
		t.y = 5;
		int i;
		for(i=0; i<t.x; i++){
			t.y += t.y;
		}
		printf("%d", t.y);
		return 0;
	}
-15
-40
-Struktura nije pravilno deklarisana!
+Promenljiva t nije pravilno deklarisana!
.

Koja ce biti vrednost promenljive broj nakon izvrsavanja koda:
	struct {
	   int x;
	   int y;
	}

	int main()
	{
		struct tacka t;
		t.x = 3;
		t.y = 5;
		int i;
		for(i=0; i<t.x; i++){
			t.y += t.y;
		}
		printf("%d", t.y);
		return 0;
	}
-15
-40
+Struktura nije pravilno deklarisana!
-Promenljiva t nije pravilno deklarisana!
.

Ako je definisana struktura:
	struct oznaka {
		tip imeprom;
	};
identifikator oznaka je:
-opcioni
+obavezan
-samo u slucaju kada se koristi sa naredbom struct oznaka nije identifikator
.

Ako je definisana struktura:
	typedef struct oznaka {
		tip imeprom;
	} Toznaka;
identifikator oznaka je:
+opcioni
-obavezan
-u ovom slucaju oznaka nije identifikator
.

Ako je definisana struktura:
	typedef struct oznaka {
		tip imeprom;
	} Toznaka;
identifikator Toznaka je:
-opcioni
+obavezan
-u ovom slucaju Toznaka nije identifikator
.

Ako je definisana struktura:
	typedef struct {
		tip imeprom;
	} Toznaka;
identifikator Toznaka je:
-opcioni
+obavezan
-u ovom slucaju Toznaka nije identifikator
.

Kojim od predlozenih nacina se moze pristupiti vrednosti x koordinate tacke a (unutar funkcije main), iz sledećeg koda:
	#include <stdio.h>
	typedef struct point { int x; int y; } POINT;
	int main() {
		POINT a;
		POINT *pa=&a;
		a.x = 1; a.y = 2;
		return 0;
	}
-&pa.x
-a->x
-&a.x
-pa.x
+pa->x
.

Kojim od predlozenih nacina se moze ucitati vrednost y koordinate tacke a (unutar funkcije main), iz sledećeg koda:
	#include <stdio.h>
	typedef struct point { int x; int y; } POINT;
	int main() {
		POINT a;
		POINT *pa=&a;
		return 0;
	}
-scanf("%d",&pa.y);
+scanf("%d",&pa->y);
-scanf("%d",pa.y);
-scanf("%d",pa->y);
.
